{"version":3,"sources":["utils.ts","components/Pagination/Pagination.tsx","App.tsx","index.tsx"],"names":["getNumbers","from","to","numbers","n","push","Pagination","total","perPage","currentPage","onPageChange","amountOfPages","Math","ceil","className","cn","disabled","href","onClick","map","el","active","items","numbersOfItems","App","useState","setPerPage","setPageChange","visibleItems","tools","val","page","startIndex","endIndex","length","preperedItems","slice","getPreperedItems","id","value","onChange","e","target","htmlFor","item","ReactDOM","render","document","getElementById"],"mappings":"yLAAO,SAASA,EAAWC,EAAcC,GAGvC,IAFA,IAAMC,EAAU,GAEPC,EAAIH,EAAMG,GAAKF,EAAIE,GAAK,EAC/BD,EAAQE,KAAKD,GAGf,OAAOD,E,2BCIIG,EAA8B,SAAC,GAKrC,IAJLC,EAII,EAJJA,MACAC,EAGI,EAHJA,QACAC,EAEI,EAFJA,YACAC,EACI,EADJA,aAEMC,EAAgBC,KAAKC,KAAKN,EAAQC,GAClCL,EAAUH,EAAW,EAAGW,GAc9B,OACE,qBAAIG,UAAU,aAAd,UACE,oBAAIA,UAAWC,IAAG,YAAa,CAAEC,SAA0B,IAAhBP,IAA3C,SACE,mBACE,UAAQ,WACRK,UAAU,YACVG,KAAK,QACL,gBAA+B,IAAhBR,EACfS,QApBS,WACK,IAAhBT,GACFC,EAAaD,EAAc,IAazB,oBAUDN,EAAQgB,KAAI,SAACC,GAAD,OACX,oBACEN,UAAWC,IAAG,YAAa,CAAEM,OAAQD,IAAOX,IAD9C,SAIE,mBACE,UAAQ,WACRK,UAAU,YACVG,KAAI,WAAMR,GACVS,QAAS,kBAAMR,EAAaU,IAJ9B,SAMGA,KAREA,MAYT,oBAAIN,UAAWC,IACb,YACA,CAAEC,SAAUP,IAAgBE,IAF9B,SAKE,mBACE,UAAQ,WACRG,UAAU,YACVG,KAAK,QACL,gBAAeR,IAAgBE,EAC/BO,QA5CS,WACXT,IAAgBE,GAClBD,EAAaD,EAAc,IAqCzB,wBC3DFa,EAAQtB,EAAW,EAAG,IACzBmB,KAAI,SAAAf,GAAC,qBAAYA,MAEhBmB,EAA2B,GAiBxB,IAAMC,EAAgB,WAC3B,MAA8BC,mBAAS,GAAvC,mBAAOjB,EAAP,KAAgBkB,EAAhB,KACA,EAAqCD,mBAAS,GAA9C,mBAAOhB,EAAP,KAAoBkB,EAApB,KACMC,EAlBR,SAA0BC,EAAiBC,EAAaC,GACtD,IAAMC,EAAaF,GAAOC,EAAO,GAC7BE,EAAWD,EAAaF,EAExBG,EAAWX,EAAMY,SACnBD,EAAWX,EAAMY,QAGnB,IAAMC,EAAgBN,EAAMO,MAAMJ,EAAYC,GAI9C,OAFAV,EAAiB,CAACS,EAAa,EAAGC,GAE3BE,EAMcE,CAAiBf,EAAOd,EAASC,GAEtD,OACE,sBAAKK,UAAU,YAAf,UACE,uDAEA,mBAAGA,UAAU,OAAO,UAAQ,OAA5B,wBACWL,EADX,mBACiCc,EAAe,GADhD,cACwDA,EAAe,GADvE,aAIA,sBAAKT,UAAU,iBAAf,UACE,qBAAKA,UAAU,0BAAf,SACE,yBACE,UAAQ,kBACRwB,GAAG,kBACHxB,UAAU,eACVyB,MAAO/B,EACPgC,SAAU,SAACC,GAAD,MAAO,CAACf,GAAYe,EAAEC,OAAOH,OAAQZ,EAAc,KAL/D,UAOE,wBAAQY,MAAM,IAAd,eACA,wBAAQA,MAAM,IAAd,eACA,wBAAQA,MAAM,KAAd,gBACA,wBAAQA,MAAM,KAAd,qBAIJ,uBAAOI,QAAQ,kBAAkB7B,UAAU,qBAA3C,+BAKF,cAAC,EAAD,CACEP,MAAOe,EAAMY,OACb1B,QAASA,EACTC,YAAaA,EACbC,aAAciB,IAEhB,6BAEGC,EAAaT,KAAI,SAACyB,GAAD,OAChB,oBAAI,UAAQ,OAAZ,SACGA,GADqBA,YClElCC,IAASC,OAAO,cAAC,EAAD,IAASC,SAASC,eAAe,W","file":"static/js/main.8a3eb540.chunk.js","sourcesContent":["export function getNumbers(from: number, to: number): number[] {\n  const numbers = [];\n\n  for (let n = from; n <= to; n += 1) {\n    numbers.push(n);\n  }\n\n  return numbers;\n}\n","import React from 'react';\nimport cn from 'classnames';\nimport { getNumbers } from '../../utils';\n\ninterface Props {\n  total: number;\n  perPage: number;\n  currentPage: number;\n  onPageChange: (page: number) => void;\n}\n\nexport const Pagination: React.FC<Props> = ({\n  total,\n  perPage,\n  currentPage,\n  onPageChange,\n}) => {\n  const amountOfPages = Math.ceil(total / perPage);\n  const numbers = getNumbers(1, amountOfPages);\n\n  const prevPage = () => {\n    if (currentPage !== 1) {\n      onPageChange(currentPage - 1);\n    }\n  };\n\n  const nextPage = () => {\n    if (currentPage !== amountOfPages) {\n      onPageChange(currentPage + 1);\n    }\n  };\n\n  return (\n    <ul className=\"pagination\">\n      <li className={cn('page-item', { disabled: currentPage === 1 })}>\n        <a\n          data-cy=\"prevLink\"\n          className=\"page-link\"\n          href=\"#prev\"\n          aria-disabled={currentPage === 1}\n          onClick={prevPage}\n        >\n          «\n        </a>\n      </li>\n      {numbers.map((el) => (\n        <li\n          className={cn('page-item', { active: el === currentPage })}\n          key={el}\n        >\n          <a\n            data-cy=\"pageLink\"\n            className=\"page-link\"\n            href={`#${currentPage}`}\n            onClick={() => onPageChange(el)}\n          >\n            {el}\n          </a>\n        </li>\n      ))}\n      <li className={cn(\n        'page-item',\n        { disabled: currentPage === amountOfPages },\n      )}\n      >\n        <a\n          data-cy=\"nextLink\"\n          className=\"page-link\"\n          href=\"#next\"\n          aria-disabled={currentPage === amountOfPages}\n          onClick={nextPage}\n        >\n          »\n        </a>\n      </li>\n    </ul>\n  );\n};\n","import React, { useState } from 'react';\nimport './App.css';\nimport { getNumbers } from './utils';\nimport { Pagination } from './components/Pagination';\n\n// eslint-disable-next-line @typescript-eslint/no-unused-vars\nconst items = getNumbers(1, 42)\n  .map(n => `Item ${n}`);\n\nlet numbersOfItems: number[] = [];\n\nfunction getPreperedItems(tools: string[], val: number, page: number) {\n  const startIndex = val * (page - 1);\n  let endIndex = startIndex + val;\n\n  if (endIndex > items.length) {\n    endIndex = items.length;\n  }\n\n  const preperedItems = tools.slice(startIndex, endIndex);\n\n  numbersOfItems = [startIndex + 1, endIndex];\n\n  return preperedItems;\n}\n\nexport const App: React.FC = () => {\n  const [perPage, setPerPage] = useState(5);\n  const [currentPage, setPageChange] = useState(1);\n  const visibleItems = getPreperedItems(items, perPage, currentPage);\n\n  return (\n    <div className=\"container\">\n      <h1>Items with Pagination</h1>\n\n      <p className=\"lead\" data-cy=\"info\">\n        {`Page ${currentPage} (items ${numbersOfItems[0]} - ${numbersOfItems[1]} of 42)`}\n      </p>\n\n      <div className=\"form-group row\">\n        <div className=\"col-3 col-sm-2 col-xl-1\">\n          <select\n            data-cy=\"perPageSelector\"\n            id=\"perPageSelector\"\n            className=\"form-control\"\n            value={perPage}\n            onChange={(e) => [setPerPage(+e.target.value), setPageChange(1)]}\n          >\n            <option value=\"3\">3</option>\n            <option value=\"5\">5</option>\n            <option value=\"10\">10</option>\n            <option value=\"20\">20</option>\n          </select>\n        </div>\n\n        <label htmlFor=\"perPageSelector\" className=\"col-form-label col\">\n          items per page\n        </label>\n      </div>\n\n      <Pagination\n        total={items.length}\n        perPage={perPage}\n        currentPage={currentPage}\n        onPageChange={setPageChange}\n      />\n      <ul>\n\n        {visibleItems.map((item) => (\n          <li data-cy=\"item\" key={item}>\n            {item}\n          </li>\n        ))}\n      </ul>\n    </div>\n  );\n};\n\nexport default App;\n","import ReactDOM from 'react-dom';\nimport { App } from './App';\n\nReactDOM.render(<App />, document.getElementById('root'));\n"],"sourceRoot":""}